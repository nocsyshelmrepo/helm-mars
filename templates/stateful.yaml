---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mars.fullname" . }}-mars
  labels:
    {{- include "mars.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "mars.fullname" . }}-mars
  replicas: 1
  selector:
    matchLabels:
      {{- include "mars.selectorLabels" . | nindent 6 }}-mars
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mars.selectorLabels" . | nindent 8 }}-mars
    spec:
      volumes:
        - name: volume-conf
          configMap:
            name: {{ .Release.Name }}-cm-cfg
            items:
              - key: collectd.conf
                path: collectd.conf
              - key: filebeat.yml
                path: filebeat.yml

      containers:
        - name: {{ .Chart.Name }}-mars
          image: {{ include "mars.image" (list
                    .Values.global.repoPrefix .Values.image.mars.repository .Values.image.mars.tag) }}
          imagePullPolicy: {{ .Values.image.mars.pullPolicy }}

          volumeMounts:
            - name: volume-conf
              mountPath: /tmp/collectd.conf
              subPath: collectd.conf
            - name: volume-conf
              mountPath: /etc/filebeat/filebeat.yml
              subPath: filebeat.yml
            - name: mars-download-claim
              mountPath: /root/onos/download

          command:
            - /bin/sh
            - '-c'
            - |
              /bin/sh <<'EOF'
              {{ tpl (.Values.cmdstr.mars) . | nindent 14 }}
              EOF

          ports:
          - containerPort: 8101
          - containerPort: 8181
          - containerPort: 8443
          resources:
            requests:
              memory: "8Gi"
            requests:
              cpu: "2000m"
          env:
          - name: ONOS_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: WORK_NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: ONOS_TOPOLOGY
            value: "{{ .Values.envs.mars.topo }}"
          - name: FABRIC_ADDRESS
            value: "unnumbered"
          - name: ES_DOC
            value: "_doc"
          - name: KARAF_DEBUG
            value: "true"
          - name: ES_HOSTS
            value: "{{ printf "%s-es.%s:9200" (include "mars.fullname" .) .Release.Namespace }}"
          - name: JAVA_OPTS
            value: "{{ .Values.envs.mars.jopts }}"
          - name: ONOS_APPS
            value: "{{ .Values.envs.mars.apps }}"
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - '-c'
                - >-
                  curl --fail -u marsinneruser:onlycodeused -I
                  http://127.0.0.1:8181/mars/v1/network/configuration
  volumeClaimTemplates:
  - metadata:
      name: mars-download-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 4Gi


---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mars.fullname" . }}-es
  labels:
    {{- include "mars.labels" . | nindent 4 }}-es
spec:
  serviceName: {{ include "mars.fullname" . }}-es
  replicas: 1
  selector:
    matchLabels:
      {{- include "mars.selectorLabels" . | nindent 6 }}-es
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mars.selectorLabels" . | nindent 8 }}-es
    spec:
      containers:
        - name: {{ .Chart.Name }}-es
          image: {{ include "mars.image" (list
                    .Values.global.repoPrefix .Values.image.es.repository .Values.image.es.tag) }}
          imagePullPolicy: {{ .Values.image.es.pullPolicy }}
          ports:
          - containerPort: 9200
            name: rest
            protocol: TCP
          - name: inter-node
            containerPort: 9300
            protocol: TCP
          volumeMounts:
          - name: es-data-claim
            mountPath: /usr/share/elasticsearch/data
          env:
          - name: cluster.name
            value: mars-elk
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: cluster.initial_master_nodes
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: discovery.zen.ping.unicast.hosts
            value: {{ printf "es-cluster-0-%s-es" (include "mars.fullname" .) }}
          - name: discovery.zen.minimum_master_nodes
            value: "1"
          - name: ES_JAVA_OPTS
            value: "{{ .Values.envs.es.jopts }}"
          - name: network.host
            value: "0.0.0.0"
      initContainers:
        - name: fix-permissions
          image: busybox:1.28.4
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
          securityContext:
            privileged: true
          volumeMounts:
            - name: es-data-claim
              mountPath: /usr/share/elasticsearch/data
        - name: increase-vm-max-map
          image:  busybox:1.28.4
          imagePullPolicy: IfNotPresent
          command: ["sysctl", "-w", "vm.max_map_count=262144"]
          securityContext:
            privileged: true
        - name: increase-fd-ulimit
          image:  busybox:1.28.4
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "ulimit -n 65536"]
          securityContext:
            privileged: true
  volumeClaimTemplates:
    - metadata:
        name: es-data-claim
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 4Gi

